//Audio Code by David Kimmey
#include "Mario.h"
#include "pitches.h"
const int buttonPinWin = 2; // the number of the pushbutton pin (buttom button)
const int buttonPinLose = 3;// number for the top button
int note1 = NOTE_C4; // define note sound
int note2 = NOTE_A3;
int WinMelody [] = { NOTE_E7, NOTE_E7, 0, NOTE_E7,
  0, NOTE_C7, NOTE_E7, 0,
  NOTE_G7, 0, 0,  0,
  NOTE_G6, 0, 0, 0,
 
  NOTE_C7, 0, 0, NOTE_G6,
  0, 0, NOTE_E6, 0,
  0, NOTE_A6, 0, NOTE_B6,
  0, NOTE_AS6, NOTE_A6, 0,
 
  NOTE_G6, NOTE_E7, NOTE_G7,
  NOTE_A7, 0, NOTE_F7, NOTE_G7,
  0, NOTE_E7, 0, NOTE_C7,
  NOTE_D7, NOTE_B6, 0, 0,
 
  NOTE_C7, 0, 0, NOTE_G6,
  0, 0, NOTE_E6, 0,
  0, NOTE_A6, 0, NOTE_B6,
  0, NOTE_AS6, NOTE_A6, 0,
 
  NOTE_G6, NOTE_E7, NOTE_G7,
  NOTE_A7, 0, NOTE_F7, NOTE_G7,
  0, NOTE_E7, 0, NOTE_C7,
  NOTE_D7, NOTE_B6, 0, 0
  
};
int LoseMelody []=   { NOTE_B4, NOTE_B4, NOTE_B4, NOTE_B4, NOTE_G2, 0, NOTE_G2, NOTE_G2

};
int tempo[] = {
  12, 12, 12, 12,
  12, 12, 12, 12,
  12, 12, 12, 12,
  12, 12, 12, 12,
 
  12, 12, 12, 12,
  12, 12, 12, 12,
  12, 12, 12, 12,
  12, 12, 12, 12,
 
  9, 9, 9,
  12, 12, 12, 12,
  12, 12, 12, 12,
  12, 12, 12, 12,
 
  12, 12, 12, 12,
  12, 12, 12, 12,
  12, 12, 12, 12,
  12, 12, 12, 12,
 
  9, 9, 9,
  12, 12, 12, 12,
  12, 12, 12, 12,
  12, 12, 12, 12,
};
int noteDurations [] ={
 4, 8, 8, 4, 4, 4, 4, 4
};
// variables will change;
int buttonStateWin = 0; // variable for reading the pushbutton status
int buttonStateLose = 0;
void setup() {
// initialize the pushbutton pin as an input:
pinMode (buttonPinWin, INPUT);
pinMode (buttonPinLose, INPUT);
int buttonPinWin = LOW;
int buttonPinLose = LOW;


}

//}

void loop(){
// read the state of the pushbutton value:
buttonStateWin = digitalRead(buttonPinWin);
buttonStateLose = digitalRead(buttonPinLose);

// check if the pushbutton is pressed.
// if it is, the buttonState is HIGH:
if (buttonStateWin == HIGH) {
// iterate over the notes of the melody

for(int winNote=0; winNote <8; winNote++){
  int winNote = 0;
  int noteDuration = 1000/ tempo [winNote];
  tone(8, WinMelody [winNote], noteDuration);

  int pauseBetweenNotes = noteDuration *1.30;
  delay (pauseBetweenNotes);}
  noTone(8);
}
 if (buttonStateLose == HIGH) {
for(int loseNote=0; loseNote <8; loseNote++){
int loseNote = 0;
  int noteDuration = 1000/ noteDurations [loseNote];
  tone(8, LoseMelody [loseNote], noteDuration);

  int pauseBetweenNotes = noteDuration *1.30;
  delay (pauseBetweenNotes);}
  noTone(8);
}
}





